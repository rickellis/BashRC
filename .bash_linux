#
# ~/.bash_linux
#
# This file gets included by .bashrc
#
# Linux-specific commands here.
#

# If we are on Mac OS we exit
[ "$(uname)" == "Darwin" ] && return;


#--------------------------------------------------------------------------
# ALIASES
#--------------------------------------------------------------------------

# Open a file or URL with the system default application.
# We suppress error messages so the terminal doesn't get polluted.
alias open="xdg-open >/dev/null 2>&1"

# Alias for Visual Studio Code
alias vsc=/opt/visual-studio-code/code

# Update /etc/lsb-release
alias lsb='sudo nano /etc/lsb-release'

#add new fonts
alias fcs='sudo fc-cache -fv'
alias fcl='sudo fc-cache -fv ~/.fonts'

# Colorize
alias ls='ls --color=auto'
alias dir='dir --color=auto'
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

#--------------------------------------------------------------------------
# ARCH LINUX SPECIFIC
#--------------------------------------------------------------------------

# So I don't have to type sudo
alias pacman='sudo pacman'

# Update packages and relaunch Conky so the package indicated resets
alias pacsyu='pacman -Syu; reconky'

# Update the mirrorlist
alias mirrors="sudo reflector --verbose --country 'United States' -l 20 -n 5 --sort rate --save /etc/pacman.d/mirrorlist"

#--------------------------------------------------------------------------
# FUNCTIONS
#--------------------------------------------------------------------------

# Change directories and list contents
function lc() {
    if ! [[ -z "$1" ]]; then
        cd $1
    fi 
    ls -A --color=auto
}

#--------------------------------------------------------------------------

# Backup dotfiles
function syncdotfiles() {
    $BASEDIR/Utilities/sync-dotfiles.sh
}

#--------------------------------------------------------------------------

# Sync bashrc files to git
function syncbashfiles() {
    $BASEDIR/Utilities/sync-bashfiles.sh
}

#--------------------------------------------------------------------------

# Wifi/VPN connection utility
function wifivpn() {
    $BASEDIR/WifiVPN/wifivpn.sh
}

#--------------------------------------------------------------------------

# AURIC AUR Helper
function auric() {
    $BASEDIR/AURIC/auric.sh $@
}

#--------------------------------------------------------------------------

# Pacman Cheatsheet
function pcheat() {
    $BASEDIR/Shell-Scripts/pcheat.sh $@
}

#--------------------------------------------------------------------------

# ConkyMatic automatic conky color generator
function conkymatic() {
    $BASEDIR/ConkyMatic/conkymatic.sh $@
}

#--------------------------------------------------------------------------

# Kill and restart conky
function reconky() {
    pkill conky
    conky 2>/dev/null
}

#--------------------------------------------------------------------------

# Empty trash
function emptytrash() {
    rm -rf ~/.local/share/Trash/expunged/*
    rm -rf ~/.local/share/Trash/files/*
    rm -rf ~/.local/share/Trash/info/*
    echo "Trash has been emptied."
}

#--------------------------------------------------------------------------

# MySQL start
function mysqlstart() {
    sudo systemctl start mysqld
}

# MySQL stop
function mysqlstop() {
    sudo systemctl stop mysqld
}

function mysqlstatus() {
    systemctl status mysqld
}

#--------------------------------------------------------------------------

# Variety transport control
# Next
function vn() {
    variety -n >/dev/null
}
# Previous
function vp() {
    variety -p >/dev/null
}
# Send to trash
function vx() {
    variety -t >/dev/null
}

#--------------------------------------------------------------------------

# Session commands
function session() {
    CMD=$1          # first argument
    CMD=${CMD,,}    # lowercase
    CMD=${CMD//-/}  # remove dashes
    CMD=${CMD// /}  # remove spaces

    case "$CMD" in
        l)  xfce4-session-logout --logout ;;
        s)  xfce4-session-logout --suspend ;;
        r)  xfce4-session-logout --reboot ;;
        x)  xfce4-session-logout --fast ;;
        *)  echo "COMMANDS: l=logout, s=suspend, r=reboot, x=shutdown" ;;
    esac
}

#--------------------------------------------------------------------------

# Set Reminder.
# Allows you to set a reminder via the terminal.
# A dialog box will show when the timer ends.
reminder() {
    echo "How many minutes from now do you want the reminder?"
    read _time
    echo "What should the reminder message say?"
    read _msg
    echo "Reminder set! Make sure to leave terminal open."
    sleep ${_time}m && zenity --info --text "$_msg" 2>/dev/null
}

#--------------------------------------------------------------------------
# APPLICATIONS
#--------------------------------------------------------------------------

# Launch neofetch
neofetch
